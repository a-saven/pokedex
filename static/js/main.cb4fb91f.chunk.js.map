{"version":3,"sources":["components/text-search.js","components/type-filter.js","components/sorter.js","components/pokemon-list.js","components/card.js","pages/main.js","pages/favorite.js","App.js","index.js"],"names":["TextSearch","pokemonList","nameFilter","useState","value","setValue","inputValue","setInputValue","Autocomplete","onChange","event","newValue","name","onInputChange","newInputValue","disablePortal","id","options","getOptionLabel","option","sx","width","renderInput","params","TextField","label","pokeTypes","Water","Electric","Grass","Fighting","Fairy","Poison","Fire","Ice","Flying","Psychic","Normal","Rock","Dragon","Bug","Steel","Ground","TypeFilter","typeFilter","checked","setChecked","Box","p","display","gridTemplateColumns","Object","keys","map","type","FormControlLabel","control","Checkbox","newChecked","selected","filter","item","handleChange","SortMenu","sortSelect","sort","anchorEl","setAnchorEl","open","Boolean","handleClose","pl","Button","aria-controls","aria-haspopup","aria-expanded","undefined","variant","disableElevation","onClick","currentTarget","endIcon","size","Menu","MenuListProps","onClose","MenuItem","disableRipple","Divider","my","POKEMONS","gql","PokemonList","updatePokemons","useQuery","variables","first","loading","error","data","useEffect","pokemons","ExpandMore","styled","props","expand","other","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","PokemonCard","pokemon","expanded","setExpanded","Card","maxWidth","height","CardHeader","avatar","Avatar","bgcolor","aria-label","slice","title","subheader","classification","CardMedia","component","image","alt","CardContent","justifyContent","Typography","color","maxCP","maxHP","types","join","CardActions","disableSpacing","savedIdArray","JSON","parse","localStorage","savedIndex","indexOf","setItem","stringify","splice","handleFavorite","number","Collapse","in","timeout","unmountOnExit","paragraph","resistant","weaknesses","fleeRate","weight","minimum","maximum","Main","setPokemons","setSort","filterName","setNameFilter","filterType","setTypeFilter","m","flexDirection","alignItems","select","Link","to","fontWeight","textAlign","length","includes","every","a","b","borderRadius","fontSize","Favorite","App","path","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.cb4fb91f.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport TextField from '@mui/material/TextField'\r\nimport Autocomplete from '@mui/material/Autocomplete'\r\n\r\nexport default function TextSearch({ pokemonList, nameFilter }) {\r\n  const [value, setValue] = useState(pokemonList?.[0])\r\n  const [inputValue, setInputValue] = useState('')\r\n\r\n  return (\r\n    <Autocomplete\r\n      value={value}\r\n      onChange={(event, newValue) => {\r\n        nameFilter(newValue?.name)\r\n        setValue(newValue)\r\n      }}\r\n      inputValue={inputValue}\r\n      onInputChange={(event, newInputValue) => {\r\n        nameFilter(newInputValue)\r\n        setInputValue(newInputValue)\r\n      }}\r\n      disablePortal\r\n      id=\"combo-box-demo\"\r\n      options={pokemonList}\r\n      getOptionLabel={(option) => option?.name}\r\n      sx={{ width: 300 }}\r\n      renderInput={(params) => (\r\n        <TextField {...params} label=\"Pokemon name\" width={'300px'} />\r\n      )}\r\n    />\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Box from '@mui/material/Box'\r\nimport Checkbox from '@mui/material/Checkbox'\r\nimport FormControlLabel from '@mui/material/FormControlLabel'\r\n\r\nconst pokeTypes = {\r\n  Water: false,\r\n  Electric: false,\r\n  Grass: false,\r\n  Fighting: false,\r\n  Fairy: false,\r\n  Poison: false,\r\n  Fire: false,\r\n  Ice: false,\r\n  Flying: false,\r\n  Psychic: false,\r\n  Normal: false,\r\n  Rock: false,\r\n  Dragon: false,\r\n  Bug: false,\r\n  Steel: false,\r\n  Ground: false\r\n}\r\n\r\nexport default function TypeFilter({ typeFilter }) {\r\n  const [checked, setChecked] = useState(pokeTypes)\r\n\r\n  const handleChange = (type) => {\r\n    const newChecked = checked\r\n    newChecked[type] = !checked[type]\r\n    setChecked(newChecked)\r\n    const selected = Object.keys(newChecked).filter(\r\n      (item) => newChecked[item] === true\r\n    )\r\n    typeFilter(selected)\r\n  }\r\n\r\n  return (\r\n    <Box p={5} sx={{ display: 'grid', gridTemplateColumns: 'repeat(8, 1fr)' }}>\r\n      {Object.keys(pokeTypes).map((type) => (\r\n        <Box>\r\n          <FormControlLabel\r\n            label={type}\r\n            control={\r\n              <Checkbox\r\n                checked={checked[type]}\r\n                onChange={() => handleChange(type)}\r\n              />\r\n            }\r\n          />\r\n        </Box>\r\n      ))}\r\n    </Box>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Button from '@mui/material/Button'\r\nimport Menu from '@mui/material/Menu'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport Divider from '@mui/material/Divider'\r\nimport Box from '@mui/material/Box'\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\r\n\r\nexport default function SortMenu({ sortSelect, sort }) {\r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n\r\n  const open = Boolean(anchorEl)\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  const handleClose = (value) => {\r\n    sortSelect(value)\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  return (\r\n    <Box pl={10}>\r\n      <Button\r\n        id=\"demo-customized-button\"\r\n        aria-controls=\"demo-customized-menu\"\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? 'true' : undefined}\r\n        variant=\"contained\"\r\n        disableElevation\r\n        onClick={handleClick}\r\n        endIcon={<KeyboardArrowDownIcon />}\r\n        size=\"large\"\r\n        //width={300}\r\n      >\r\n        Sort by {sort}\r\n      </Button>\r\n      <Menu\r\n        id=\"demo-customized-menu\"\r\n        MenuListProps={{\r\n          'aria-labelledby': 'demo-customized-button'\r\n        }}\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={() => handleClose('A-Z')} disableRipple>\r\n          By name A-Z\r\n        </MenuItem>\r\n        <MenuItem onClick={() => handleClose('Z-A')} disableRipple>\r\n          By name Z-A\r\n        </MenuItem>\r\n        <Divider sx={{ my: 0.5 }} />\r\n        <MenuItem onClick={() => handleClose('Type A-Z')} disableRipple>\r\n          By first type A-Z\r\n        </MenuItem>\r\n        <MenuItem onClick={() => handleClose('Type Z-A')} disableRipple>\r\n          By first type Z-A\r\n        </MenuItem>\r\n        <Divider sx={{ my: 0.5 }} />\r\n        <MenuItem onClick={() => handleClose('Id')} disableRipple>\r\n          Number\r\n        </MenuItem>\r\n      </Menu>\r\n    </Box>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useQuery, gql } from '@apollo/client'\r\n\r\nconst POKEMONS = gql`\r\n  query pokemons($first: Int!) {\r\n    pokemons(first: $first) {\r\n      id\r\n      number\r\n      name\r\n      weight {\r\n        minimum\r\n        maximum\r\n      }\r\n      height {\r\n        minimum\r\n        maximum\r\n      }\r\n      classification\r\n      types\r\n      resistant\r\n      weaknesses\r\n      fleeRate\r\n      maxCP\r\n      maxHP\r\n      image\r\n    }\r\n  }\r\n`\r\n\r\nexport default function PokemonList({ updatePokemons }) {\r\n  const { loading, error, data } = useQuery(POKEMONS, {\r\n    variables: { first: 200 }\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (data?.pokemons) {\r\n      updatePokemons(data.pokemons)\r\n    }\r\n  }, [data])\r\n\r\n  if (loading) return <p>Loading...</p>\r\n  if (error) return <p>Error :(</p>\r\n\r\n  return null\r\n}\r\n","import React, { useState } from 'react'\r\nimport { styled } from '@mui/material/styles'\r\nimport Card from '@mui/material/Card'\r\nimport Box from '@mui/material/Box'\r\nimport CardHeader from '@mui/material/CardHeader'\r\nimport CardMedia from '@mui/material/CardMedia'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport CardActions from '@mui/material/CardActions'\r\nimport Collapse from '@mui/material/Collapse'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Typography from '@mui/material/Typography'\r\nimport FavoriteIcon from '@mui/icons-material/Favorite'\r\nimport ShareIcon from '@mui/icons-material/Share'\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\r\n\r\nconst ExpandMore = styled((props) => {\r\n  const { expand, ...other } = props\r\n  return <IconButton {...other} />\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n  marginLeft: 'auto',\r\n  transition: theme.transitions.create('transform', {\r\n    duration: theme.transitions.duration.shortest\r\n  })\r\n}))\r\n\r\nexport default function PokemonCard({ pokemon }) {\r\n  const [expanded, setExpanded] = useState(false)\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded)\r\n  }\r\n\r\n  const handleFavorite = (id) => {\r\n    let savedIdArray = JSON.parse(localStorage['favorite'] || null)\r\n    if (!savedIdArray) {\r\n      localStorage.setItem('favorite', JSON.stringify([id]))\r\n    } else {\r\n      const savedIndex = savedIdArray.indexOf(id)\r\n      if (savedIndex === -1) {\r\n        localStorage.setItem('favorite', JSON.stringify([...savedIdArray, id]))\r\n      } else {\r\n        savedIdArray.splice(savedIndex, 1)\r\n        localStorage.setItem('favorite', JSON.stringify(savedIdArray))\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card sx={{ maxWidth: 345, height: '100%' }}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: '#1976d2' }} aria-label=\"recipe\">\r\n            {pokemon?.name.slice(0, 1)}\r\n          </Avatar>\r\n        }\r\n        title={pokemon?.name}\r\n        subheader={pokemon?.classification}\r\n      />\r\n      <CardMedia\r\n        component=\"img\"\r\n        height=\"400\"\r\n        image={pokemon?.image}\r\n        alt={pokemon?.name}\r\n      />\r\n      <CardContent>\r\n        <Box display=\"flex\" justifyContent=\"space-between\">\r\n          <Box>\r\n            <Typography variant=\"body2\" color=\"primary.main\">\r\n              CP {pokemon?.maxCP}\r\n            </Typography>\r\n          </Box>\r\n          <Box>\r\n            <Typography variant=\"body2\" color=\"error.main\">\r\n              HP {pokemon?.maxHP}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Typography variant=\"body1\" color=\"text.primary\">\r\n          {pokemon?.types?.join(', ')}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon onClick={() => handleFavorite(pokemon?.number)} />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n        <ExpandMore\r\n          expand={expanded}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </ExpandMore>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography variant=\"h6\">Resistant:</Typography>\r\n          <Typography paragraph>{pokemon?.resistant?.join(', ')}</Typography>\r\n          <Typography variant=\"h6\">Weaknesses:</Typography>\r\n          <Typography paragraph>{pokemon?.weaknesses?.join(', ')}</Typography>\r\n          <Typography variant=\"h6\">Flee Rate:</Typography>\r\n          <Typography paragraph>{pokemon?.fleeRate}</Typography>\r\n          <Typography variant=\"h6\">Weight:</Typography>\r\n          <Typography paragraph>\r\n            {pokemon?.weight?.minimum} - {pokemon?.weight?.maximum}\r\n          </Typography>\r\n          <Typography variant=\"h6\">Height:</Typography>\r\n          <Typography paragraph>\r\n            {pokemon?.height?.minimum} - {pokemon?.height?.maximum}\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Box from '@mui/material/Box'\r\nimport Typography from '@mui/material/Typography'\r\nimport Button from '@mui/material/Button'\r\nimport { Link } from 'react-router-dom'\r\nimport TextSearch from 'components/text-search'\r\nimport TypeFilter from 'components/type-filter'\r\nimport Sorter from 'components/sorter'\r\nimport PokemonList from 'components/pokemon-list'\r\nimport PokemonCard from 'components/card'\r\n\r\nexport default function Main() {\r\n  const [pokemons, setPokemons] = useState(null)\r\n  const [sort, setSort] = useState('Id')\r\n  const [filterName, setNameFilter] = useState(null)\r\n  const [filterType, setTypeFilter] = useState([])\r\n\r\n  const updatePokemons = (pokemons) => {\r\n    setPokemons(pokemons)\r\n  }\r\n\r\n  const sortSelect = (select) => {\r\n    setSort(select)\r\n  }\r\n\r\n  const nameFilter = (name) => {\r\n    setNameFilter(name)\r\n  }\r\n\r\n  const typeFilter = (type) => {\r\n    setTypeFilter(type)\r\n  }\r\n\r\n  const pokeFilter = (pokemon) => {\r\n    if (!filterName && filterType.length === 0) {\r\n      return pokemon\r\n    } else if (filterName && filterType.length > 0) {\r\n      if (\r\n        pokemon.name.includes(filterName) &&\r\n        filterType.every((type) => pokemon.types.includes(type))\r\n      ) {\r\n        return pokemon\r\n      }\r\n    } else if (filterName && filterType.length === 0) {\r\n      if (pokemon.name.includes(filterName)) {\r\n        return pokemon\r\n      }\r\n    } else if (filterType.length > 0 && !filterName) {\r\n      if (filterType.every((type) => pokemon.types.includes(type))) {\r\n        return pokemon\r\n      }\r\n    } else {\r\n      return pokemon\r\n    }\r\n  }\r\n\r\n  const pokeSort = (a, b) => {\r\n    switch (sort) {\r\n      case 'number':\r\n        return a < b ? -1 : 1\r\n      case 'A-Z':\r\n        return a.name < b.name ? -1 : 1\r\n      case 'Z-A':\r\n        return a.name < b.name ? 1 : -1\r\n      case 'Type A-Z':\r\n        return a.types[0] < b.types[0] ? -1 : 1\r\n      case 'Type Z-A':\r\n        return b.types[0] - a.types[0] ? 1 : -1\r\n      default:\r\n        return a - b\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box width={'100%'} display=\"flex\" justifyContent=\"center\" m={5}>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        width={1280}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)' }}>\r\n          <Box\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n          >\r\n            <Box m={1}>\r\n              <Sorter sortSelect={sortSelect} sort={sort} />\r\n            </Box>\r\n            <Box m={1}>\r\n              <Button\r\n                component={Link}\r\n                to=\"/favorite\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                variant=\"outlined\"\r\n              >\r\n                Favorite\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n          <Box fontWeight=\"700\" alignItems=\"center\" justifyContent=\"center\">\r\n            <Typography variant=\"h6\" textAlign=\"center\">\r\n              POKEDEX\r\n            </Typography>\r\n          </Box>\r\n          <Box maxWidth={'400px'}>\r\n            <TextSearch pokemonList={pokemons} nameFilter={nameFilter} />\r\n          </Box>\r\n        </Box>\r\n        <Box>\r\n          <TypeFilter typeFilter={typeFilter} />\r\n        </Box>\r\n        <Box>\r\n          <PokemonList updatePokemons={updatePokemons} />\r\n        </Box>\r\n\r\n        <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)' }}>\r\n          {pokemons &&\r\n            pokemons\r\n              .filter(pokeFilter)\r\n              .sort(pokeSort)\r\n              .map((pokemon) => (\r\n                <Box\r\n                  m={1}\r\n                  p={1}\r\n                  borderRadius={1}\r\n                  textAlign={'center'}\r\n                  fontSize={19}\r\n                  fontWeight=\"700\"\r\n                >\r\n                  <PokemonCard pokemon={pokemon} />\r\n                </Box>\r\n              ))}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Box from '@mui/material/Box'\r\nimport PokemonList from 'components/pokemon-list'\r\nimport PokemonCard from 'components/card'\r\n\r\nexport default function Favorite() {\r\n  const [pokemons, setPokemons] = useState(null)\r\n\r\n  const updatePokemons = (pokemons) => {\r\n    setPokemons(pokemons)\r\n  }\r\n\r\n  const numberFilter = (pokemon) => {\r\n    let savedIdArray = JSON.parse(localStorage['favorite'] || null)\r\n    const savedIndex = savedIdArray.indexOf(pokemon?.number)\r\n    return savedIndex === -1 ? null : pokemon\r\n  }\r\n\r\n  return (\r\n    <Box width={'100%'} display=\"flex\" justifyContent=\"center\" m={5}>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        width={1280}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)' }}>\r\n          {pokemons &&\r\n            pokemons.filter(numberFilter).map((pokemon) => (\r\n              <Box\r\n                m={1}\r\n                p={1}\r\n                borderRadius={1}\r\n                textAlign={'center'}\r\n                fontSize={19}\r\n                fontWeight=\"700\"\r\n              >\r\n                <PokemonCard pokemon={pokemon} />\r\n              </Box>\r\n            ))}\r\n        </Box>\r\n      </Box>\r\n      <PokemonList updatePokemons={updatePokemons} />\r\n    </Box>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport Main from 'pages/main'\r\nimport Favorite from 'pages/favorite'\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/favorite\">\r\n          <Favorite />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Main />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client'\r\n\r\nconst client = new ApolloClient({\r\n  uri: 'https://graphql-pokemon2.vercel.app',\r\n  cache: new InMemoryCache()\r\n})\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}